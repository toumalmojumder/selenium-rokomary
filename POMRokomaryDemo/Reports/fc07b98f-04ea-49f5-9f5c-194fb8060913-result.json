{"name": "test_login[chrome]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <Tests.test_Login.Test_Login object at 0x03E02478>\n\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_login(self):\n        self.loginPage = LoginPage(self.driver)\n        self.loginPage.do_login(TestData.USER_NAME, TestData.PASSWORD)\n>       title = self.loginPage.get_title(TestData.HOME_PAGE_TITLE)\n\nTests\\test_Login.py:27: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nPages\\BasePages.py:25: in get_title\n    WebDriverWait(self.driver,10).until(EC.title_is(title))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"8dcc661c4b3eb0b5428df79e8095b8e9\")>, method = <function title_is.<locals>._predicate at 0x03E0AD60>, message = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except InvalidSelectorException as e:\n                raise e\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nc:\\users\\toumalmojumder\\.virtualenvs\\pomrokomarydemo\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:89: TimeoutException"}, "parameters": [{"name": "init_driver", "value": "'chrome'"}], "start": 1637014308203, "stop": 1637014319321, "uuid": "67bb55e3-5df0-493f-a19d-73ec334acb00", "historyId": "b9a41077cf2347fc285f0f1cf013fc4d", "testCaseId": "f139e0c31611bba08e6bc71938391361", "fullName": "Tests.test_Login.Test_Login#test_login", "labels": [{"name": "severity", "value": "critical"}, {"name": "tag", "value": "@pytest.mark.usefixtures('init_driver')"}, {"name": "parentSuite", "value": "Tests"}, {"name": "suite", "value": "test_Login"}, {"name": "subSuite", "value": "Test_Login"}, {"name": "host", "value": "Desktop-Tomal"}, {"name": "thread", "value": "10484-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.test_Login"}]}